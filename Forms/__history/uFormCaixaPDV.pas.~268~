unit uFormCaixaPDV;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Buttons, Vcl.ExtCtrls, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Imaging.pngimage, Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.WinXCtrls,
  AdvGlowButton, Vcl.Mask, Vcl.DBCtrls;

type
  TFormCaixaPDV = class(TForm)
    pnlContainer: TPanel;
    pnl_topo: TPanel;
    pnl_rodape: TPanel;
    pnl_main: TPanel;
    pnl_operacoes: TPanel;
    pnl_grid: TPanel;
    Panel2: TPanel;
    Shape3: TShape;
    btn_cancelarItem: TSpeedButton;
    Panel4: TPanel;
    Shape5: TShape;
    btn_cancelarVenda: TSpeedButton;
    Panel5: TPanel;
    Shape6: TShape;
    BTN_abrirCaixa: TSpeedButton;
    Panel6: TPanel;
    Shape7: TShape;
    Btn_consultarPreco: TSpeedButton;
    btn_maisOPcoes: TPanel;
    btn_maisOp: TSpeedButton;
    Panel1: TPanel;
    Shape1: TShape;
    BTN_cancelarOP: TSpeedButton;
    pnl_totalCompra: TPanel;
    Label1: TLabel;
    pnl_editTotal: TPanel;
    Label2: TLabel;
    Shape4: TShape;
    Panel7: TPanel;
    pnl_subTotal: TPanel;
    pnl_EDTQTD: TPanel;
    Label4: TLabel;
    Shape9: TShape;
    panel: TPanel;
    edt_qtd: TEdit;
    pnl_Preco: TPanel;
    Label5: TLabel;
    Shape10: TShape;
    Panel9: TPanel;
    pnl_edtProduto: TPanel;
    Label7: TLabel;
    Shape11: TShape;
    Panel8: TPanel;
    edt_prod: TEdit;
    pnl_image: TPanel;
    Image1: TImage;
    gridProdutos: TDBGrid;
    SplitViewFuncoes: TSplitView;
    Panel3: TPanel;
    Panel10: TPanel;
    Shape12: TShape;
    Panel11: TPanel;
    Shape13: TShape;
    Panel12: TPanel;
    Shape14: TShape;
    Panel13: TPanel;
    Shape15: TShape;
    Panel14: TPanel;
    Shape16: TShape;
    Panel15: TPanel;
    Shape17: TShape;
    Panel16: TPanel;
    Shape18: TShape;
    SplitViewPagamentos: TSplitView;
    pnlPag: TPanel;
    query_det_vendas: TFDQuery;
    DSFiltro: TDataSource;
    FDQryProduto: TFDQuery;
    DSFiltroProduto: TDataSource;
    tb_det_vendas: TFDTable;
    tb_det_vendasNUMERO_VENDA: TIntegerField;
    tb_det_vendasPRODUTO: TWideStringField;
    tb_det_vendasVALOR_UNITARIO: TSingleField;
    tb_det_vendasQUANTIDADE: TSingleField;
    query_det_vendasNUMERO_VENDA: TIntegerField;
    query_det_vendasPRODUTO: TWideStringField;
    query_det_vendasVALOR_UNITARIO: TSingleField;
    query_det_vendasQUANTIDADE: TSingleField;
    tb_det_vendasSUB_TOTAL: TSingleField;
    query_det_vendasSUB_TOTAL: TSingleField;
    edt_preco_unitario: TEdit;
    edt_Sub_total: TEdit;
    edtTotal: TEdit;
    BTNAdicionarItem: TAdvGlowButton;
    FDCupom: TFDQuery;
    dsCupom: TDataSource;
    FDTransaction1: TFDTransaction;
    FDCupomID_CUPOM: TFDAutoIncField;
    FDCupomDATA: TDateField;
    FDCupomSUB_TOTAL: TSingleField;
    FDCupomTOTAL: TSingleField;
    FDCupomFORMA_PAGAMENTO: TWideStringField;
    FDCupomDET_VENDA: TIntegerField;
    FDQryProdutoID_PRODUTO: TIntegerField;
    FDQryProdutoDESCRICAO: TWideStringField;
    FDQryProdutoQTD: TSingleField;
    FDQryProdutoCUSTO: TSingleField;
    FDQryProdutoV_UNITARIO: TSingleField;
    FDQryProdutoUNIDADE: TWideStringField;
    FDQryProdutoPESO_LIQUIDO: TSingleField;
    FDQryProdutoPESO_BRUTO: TSingleField;
    FDQryProdutoFABRICANTE: TWideStringField;
    FDQryProdutoMARCA_MODELO: TWideStringField;
    FDQryProdutoID_FORNECEDOR: TIntegerField;
    FDQryProdutoDT_EXCLUIDO: TDateField;
    FDQryProdutoCODIGO_AUX: TWideStringField;
    FDQryProdutoNCM: TWideStringField;
    Label3: TLabel;
    query_det_vendasSTATUS_CUPOM: TWideStringField;
    tb_det_vendasSTATUS_CUPOM: TWideStringField;
    AdvGlowButton1: TAdvGlowButton;
    Label6: TLabel;
    DBEdit1: TDBEdit;
    procedure fixarform;
    procedure FormCreate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure abreView;
    procedure btn_maisOpClick(Sender: TObject);
    procedure abrePagamento;
    procedure setQTD;
    procedure alterarqtd( );
    procedure iniciaCupom;
    procedure atualizaCampo;
    procedure controlaNumeroVenda;
    procedure limpaCampos;
    procedure adicionarItem;
    procedure alterarPrecoUnitario;
    procedure controlaCupom;
    procedure GravarCupom;
    procedure edt_prodKeyDown(Sender: TObject; var Key: Word;Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure BTNAdicionarItemClick(Sender: TObject);
    procedure AdvGlowButton1Click(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormCaixaPDV: TFormCaixaPDV;
  staCup:string;
implementation

{$R *.dfm}

uses uDmDados, uLookup, uFormPagamento;

procedure TFormCaixaPDV.abrePagamento;
begin
if SplitViewPagamentos.Opened = False then begin

SplitViewPagamentos.Opened:=true;
end else

SplitViewPagamentos.Opened:=false;
end;

procedure TFormCaixaPDV.abreView;
begin

if SplitViewFuncoes.Opened = False then begin

SplitViewFuncoes.Opened:=true;
end else

SplitViewFuncoes.Opened:=false;



end;


 procedure TFormCaixaPDV.adicionarItem;
var codigo_valor : string;
numero_venda:integer;
//var qtd :string;

   begin
if (edt_prod.Text <> '') then

begin
  fdqryProduto.Close;

  fdqryProduto.SQL.Clear;

  fdqryProduto.SQL.Add('SELECT * FROM produto WHERE ID_PRODUTO = :codigo');

  fdqryProduto.ParamByName('codigo').AsString := edt_prod.text;

  fdqryProduto.Open;

  tb_det_vendas.Open;
   // tb_det_vendas.FieldByName('codigo').Value:='1';
  //recuperar produto

    tb_det_vendas.Insert;

      // Valor Unitario
      alterarPrecoUnitario;

      // DESCRICAO DO PRODUTO

      tb_det_vendas.FieldByName('produto').Value := FDQryProduto.FieldByName('descricao').AsString;

       //Contorla Cupom
       tb_det_vendas.FieldByName('STATUS_CUPOM').Value:= 'E';
       // Quantidade
        setQTD;
       //tb_det_vendas.FieldByName('quantidade').Value := qtd;


        // Sub total
        SHOWMESSAGE(edt_qtd.Text);
        ShowMessage(edt_preco_unitario.text);
        edt_Sub_total.Text:=FloatToStr((strToFloat(edt_qtd.text) * strToFloat(edt_preco_unitario.text)));
        tb_det_vendas.FieldByName('Sub_Total').Value := StrToFloat(edt_Sub_total.Text);


         //Numero de venda FIXO
        tb_det_vendas.FieldByName('numero_venda').Value := StrToInt(dbedit1.text);



       TFloatField(query_det_vendas.FieldByName('valor_unitario')).DisplayFormat:='R$ #,,,,0.00';
       TFloatField(query_det_vendas.FieldByName('sub_total')).DisplayFormat:='R$ #,,,,0.00';

    //totalizando
    tb_det_vendas.Post;
    controlaNumeroVenda;
    atualizaCampo;
    edt_prod.SetFocus;




end
else
begin
 MessageDlg('Selecione um produto e a quantidade', mtInformation, mbOKCancel, 0);
end;
end;





procedure TFormCaixaPDV.AdvGlowButton1Click(Sender: TObject);
begin
   GravarCupom;
end;

procedure TFormCaixaPDV.BTNAdicionarItemClick(Sender: TObject);
begin
adicionarItem;
limpaCampos;
end;

procedure TFormCaixaPDV.alterarPrecoUnitario;
begin
        ShowMessage('ENTROU NO ALTERAR PRODUTO ');
        if edt_preco_unitario.text = '' then
        begin
        SHOWMESSAGE('ENTROU NO IF');

            edt_preco_unitario.text:=FDQryProduto.FieldByName('v_unitario').value;

            tb_det_vendas.FieldByName('valor_unitario').Value:=strtoint(edt_preco_unitario.Text);


        end

        else

        begin

          tb_det_vendas.FieldByName('valor_unitario').Value:=StrToInt(edt_preco_unitario.text);

        end;




end;


procedure TFormCaixaPDV.alterarqtd();
begin

edt_qtd.SetFocus;

end;

procedure TFormCaixaPDV.atualizaCampo;
var
  TotalVenda: Double;
begin
  TotalVenda := 0;

  tb_det_vendas.First; // Vá para o primeiro registro da tabela

  while not tb_det_vendas.Eof do // Enquanto não chegar ao final da tabela
  begin
    // Verifica se o número da venda no registro atual é igual ao número de venda fornecido
    if tb_det_vendas.FieldByName('Numero_Venda').AsInteger = StrToInt(dbedit1.text) then
    begin
      TotalVenda := TotalVenda + tb_det_vendas.FieldByName('Sub_Total').AsFloat; // Soma o valor da coluna "Sub_Total"
    end;

    tb_det_vendas.Next; // Vá para o próximo registro
  end;

  edttotal.Text := FormatFloat('R$ #,##0.00', TotalVenda); // Exibe o total da venda no TEdit
end;


procedure TFormCaixaPDV.btn_maisOpClick(Sender: TObject);
begin
abreView;
end;

procedure TFormCaixaPDV.controlaCupom;
begin

  tb_det_vendas.Last;


  if   tb_det_vendas.FieldByName('STATUS_CUPOM').Value='A' then

  begin

     ShowMessage('Cupom Aberto');
  iniciaCupom;
  end
  else if tb_det_vendas.FieldByName('STATUS_CUPOM').Value='E' then
  begin
 // tb_det_vendas.Last;    ACHO QU NAO PRESCISA DISSO SLA
     ShowMessage('Cupom Não Finalizado');
     FDCupom.Open;
      controlaNumeroVenda;


  // tb_det_vendas.FetchAll;


  end;
end;


procedure TFormCaixaPDV.controlaNumeroVenda;
begin
    query_det_vendas.Close;
    query_det_vendas.SQL.Clear;
    query_det_vendas.SQL.Add('select * from DET_VENDA_teste WHERE numero_venda = '+dbedit1.text+' order by numero_venda desc') ; //Puxa numero de venda
    query_det_vendas.Open;
end;

procedure TFormCaixaPDV.edt_prodKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   if Key = vk_f10 then
    BTNAdicionarItemclick(self);


end;

procedure TFormCaixaPDV.fixarform;
var
LPagamentos : TFormCaixaPagamento;
begin
self.WindowState :=TWindowState.wsNormal;
self.Position :=poScreenCenter;
self.Constraints.MaxHeight:=self.ClientHeight;
self.Constraints.MinHeight:= self.ClientHeight;
self.Constraints.MaxWidth:=self.ClientWidth;
self.Constraints.MinWidth:=self.ClientWidth;

 lPagamentos := TFormCaixaPagamento.Create(nil);
lPagamentos.Parent :=pnlPag;
lPagamentos.show;


end;

procedure TFormCaixaPDV.FormCreate(Sender: TObject);
begin
  fixarform;
  edt_prod.ShowHint := True;
   edt_prod.SetFocus;

 end;

procedure TFormCaixaPDV.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin

case key of

 // Finalizando venda
vk_f2: abrePagamento;
//nao faz nada ainda =/
vk_f5 :adicionarItem;
//inutil
VK_F7: abreView;

//adiciona quantidade foco
VK_F3:edt_qtd.SetFocus;

VK_F4:edt_preco_unitario.SetFocus;




end;
end;



procedure TFormCaixaPDV.FormShow(Sender: TObject);
begin
  controlaCupom;//iniciaCupom;


end;



procedure TFormCaixaPDV.GravarCupom;

    begin
    if fdcupom.State in [dsEdit, dsInsert] then
    FDTransaction1.StartTransaction;
    controlaNumeroVenda;
    tb_det_vendas.Insert; //insere o registro
    FDCUPOM.INSERT;
    FDCupom.FieldByName('Data').Value:=date;
    tb_det_vendas.FieldByName('STATUS_CUPOM').Value:='A';
    fdcupom.FieldByName('SUB_TOTAL').Value:=tb_det_vendas.FieldByName('SUB_TOTAL').Value;
   //fdcupom.FieldByName('TOTAL').Value:=edtTotal.Text;
    atualizaCampo;
    fdcupom.Post;

    FDTransaction1.CommitRetaining;


    limpaCampos;

//
//     tb_det_vendas.Open;
//     tb_det_vendas.Insert;



end;



procedure TFormCaixaPDV.iniciaCupom;
begin


    if not (FDCupom.State in [dsEdit, dsInsert]) then begin
    tb_det_vendas.Insert;
    tb_det_vendas.FieldByName('STATUS_CUPOM').value:='A';



    FDCupom.Insert;

  end;
end;

procedure TFormCaixaPDV.limpaCampos;
begin

edt_prod.Text:='';
edt_qtd.Text:='';
edt_preco_unitario.Text:='';
edt_Sub_total.Text:='';


end;

procedure TFormCaixaPDV.setQTD;
begin

        if edt_qtd.text = '' then
        begin
            edt_qtd.Text:='1';
        end;

         tb_det_vendas.FieldByName('quantidade').Value := StrToInt(edt_qtd.text);

end;

end.
